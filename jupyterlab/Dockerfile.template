FROM {{BASE_IMAGE}}:{{TAG_PREFIX}}{{TAG}}
USER root
RUN  yum install -y epel-release
RUN  yum repolist
RUN  yum -y  upgrade
RUN  yum -y install gcc \
      git sudo \
      python-devel http-parser nodejs \
      make zlib-devel perl-ExtUtils-MakeMaker gettext \
      pandoc \
      texlive texlive-collection-xetex texlive-ec texlive-upquote \
      texlive-adjustbox
# Python 3.6, tkinter, and git: install from SCL
RUN  yum -y install centos-release-scl && \
     yum-config-manager --enable rhel-server-rhscl-7-rpms && \
     yum -y install rh-git29 devtoolset-6 rh-python36-python-tkinter \
      rh-python36
RUN  cd /tmp && \
     V="2.2.9" && \
     FN="hub-linux-amd64-${V}" && \
     F="${FN}.tgz" && \
     URL="https://github.com/github/hub/releases/download/v${V}/${F}" && \
     cmd="curl -L ${URL} -o ${F}" && \
     $cmd && \
     tar xpfz ${F} && \
     install -m 0755 ${FN}/bin/hub /usr/bin && \
     rm -rf ${F} ${FN}
RUN  source scl_source enable rh-python36 && \
      pip3 install --upgrade pip setuptools
RUN  source scl_source enable rh-python36 && \
      pip3 install --upgrade virtualenv virtualenvwrapper \
      ipykernel \
      pipenv \
      nbdime \
      nbval \
      numpy \
      scipy \
      pandas \
      astropy \
      pypandoc \
      ipywidgets \
      rise \
      matplotlib \
      astroquery \
      healpy \
      bokeh
RUN  source scl_source enable rh-python36 && \
      pip3 install \
      https://github.com/jupyterlab/jupyterlab/zipball/master \
      https://github.com/jupyterlab/jupyterlab_launcher/zipball/master \
      https://github.com/jupyter/notebook/zipball/master \
      https://github.com/jupyterhub/jupyterhub/zipball/master \
      https://github.com/jupyterhub/nbserverproxy/zipball/master
RUN  git ls-remote https://github.com/jupyterlab/jupyterlab.git master | \
       awk '{print $1}' > /root/jupyterlab.commit
RUN  source scl_source enable rh-python36 && \
      python3 $(which nbdime) config-git --enable --system
# scipy/pandas/numpy/astropy/matplotlib all already there
RUN  source /opt/lsst/software/stack/loadLSST.bash && \
     pip install --upgrade pip \
        setuptools \
        virtualenvwrapper \
        ipykernel \
        pipenv \
        nbdime \
        nbval \
        pypandoc \
        rise \
        ipywidgets \
        astroquery \
        bokeh
ENV  PYVER={{PYVER}}
RUN  pdir=/opt/lsst/software/stack/python/current/bin && \
     export pdir && \
     if ! [ -d ${pdir} ]; then \
         mkdir -p ${pdir} && \
         cd ${pdir} && \
         source /opt/lsst/software/stack/loadLSST.bash && \     
         ln -sf $(which python${PYVER}) . ;\
      fi
RUN  /opt/lsst/software/stack/python/current/bin/python${PYVER} \
      -m ipykernel install --name 'LSST_Stack'
ENV SVXT="jupyterlab nbserverproxy nbdime"
ENV NBXT="widgetsnbextension rise"
ENV LBXT="@jupyter-widgets/jupyterlab-manager"
RUN  source scl_source enable rh-python36 && \
      for s in $SVXT; do \
          jupyter serverextension enable ${s} --py --sys-prefix ; \
          /opt/lsst/software/stack/python/current/bin/python${PYVER} \
           $(which jupyter) serverextension enable ${s} --py --sys-prefix ; \
      done
RUN  source scl_source enable rh-python36 && \
      for n in $NBXT; do \
          jupyter nbextension install ${n} --py --sys-prefix ; \
          jupyter nbextension enable ${n} --py  --sys-prefix ; \
          /opt/lsst/software/stack/python/current/bin/python${PYVER} \
           $(which jupyter) nbextension install ${n} --py --sys-prefix ; \
          /opt/lsst/software/stack/python/current/bin/python${PYVER} \
           $(which jupyter) nbextension enable ${n} --py --sys-prefix ; \
      done
RUN  source scl_source enable rh-python36 && \
      for l in $LBXT; do \
          jupyter labextension install ${l} --no-build; \
          /opt/lsst/software/stack/python/current/bin/python${PYVER} ; \
           $(which jupyter) labextension install ${l} --no-build; \
      done
ENV GITXT="jupyterlab-hub jupyterlab-savequit jupyterlab_bokeh"
RUN  source scl_source enable rh-python36 && \
      mkdir -p /usr/share/git && \
      cd /usr/share/git && \
      jlpm global add webpack && \
      git clone https://github.com/jupyterhub/jupyterlab-hub.git && \
      git clone https://github.com/lsst-sqre/jupyterlab-savequit && \
      git clone https://github.com/bokeh/jupyterlab_bokeh.git && \
      for i in ${GITXT}; do \
          cd ${i} && \
          python3 $(which jupyter) labextension link . --no-build && \
          jlpm install --unsafe-perm && \
          jlpm run build && \
          cd .. ;\
      done
RUN  source scl_source enable rh-python36 && \
      mkdir -p /usr/share/git && \
      cd /usr/share/git && \
      git clone https://github.com/cds-astro/ipyaladin.git && \
      cd ipyaladin/js && \
      npm install --unsafe-perm && \
      cd .. && \
      pip install -e . && \
      cd js && \
      jupyter labextension install --no-build && \
      /opt/lsst/software/stack/python/current/bin/python${PYVER} \
       $(which jupyter) labextension install --no-build
ENV  jl=/opt/lsst/software/jupyterlab
RUN  mkdir -p ${jl}
COPY eups.patch ${jl}/
# Patch eups if it needs patching -- that is, is it prior to 2.1.4?
RUN  source /opt/lsst/software/stack/loadLSST.bash && \
     eups="/opt/lsst/software/stack/eups/current/bin/eups" && \
     e_ver=$(${eups} --version | cut -d ':' -f 2 | cut -c 2- ) && \
     e_maj=$(echo ${e_ver} | cut -d '.' -f 1 ) && \
     e_min=$(echo ${e_ver} | cut -d '.' -f 2 ) && \
     e_pat=$(echo ${e_ver} | cut -d '.' -f 3 ) && \
     if [ "${e_maj}" -lt 2 ] || [ "${e_min}" -lt 1 ] || \
      [ ${e_pat} -lt 4 ]; then \
         cd $(dirname "${eups}") ; \
         patch < ${jl}/eups.patch ; \
     fi
RUN source /opt/lsst/software/stack/loadLSST.bash && \
      cd /usr/share/git/ipyaladin && \
      pip -install -e .      
RUN  source scl_source enable rh-python36 && \
      for i in clean build; do \
          jupyter lab ${i} ; \
      done
# Why do I need this?
RUN  source scl_source enable rh-python36 && \
      jupyter labextension install jupyterlab_bokeh && \
      /opt/lsst/software/stack/python/current/bin/python${PYVER} \
       $(which jupyter) labextension install jupyterlab_bokeh
RUN  source scl_source enable rh-python36 && \
      jupyter lab build
RUN  source scl_source enable rh-python36 && \
      for l in ${LBXT} ${GITXT} ipyaladin; do \
          jupyter labextension enable ${l} && \
          /opt/lsst/software/stack/python/current/bin/python${PYVER} ; \
           $(which jupyter) labextension enable ${l}; \
      done
# Lab extensions require write permissions by running user.
RUN  groupadd -g 768 jupyter && \
     scl="/opt/rh/rh-python36/root/usr/share/" && \
     #uls="/usr/local/share" && \
     jl="jupyter/lab" && \
     u="${scl}/${jl}" && \
# If we recursively chown all of the lab directory, it gets rid of permission
# errors on startup....but also radically slows down startup, by about
# three minutes.
     mkdir -p ${u}/staging ${u}/schemas ${u}/themes && \
     for i in /usr/share/git ${u}/staging; do \
         chgrp -R jupyter ${i} ; \
         chmod -R g+w ${i} ; \
     done
# Custom local files
COPY local02-hub.sh local03-showmotd.sh  \
     local04-pythonrc.sh local05-path.sh local06-scl.sh local07-term.sh \
     local08-virtualenvwrapper.sh \
     /etc/profile.d/
RUN  cd /etc/profile.d && \
     for i in local*; do \
         ln ${i} $(basename ${i} .sh).csh ; \
     done
RUN  for i in notebooks WORK DATA idleculler ; do \
        mkdir -p /etc/skel/${i} ; \
     done	
COPY lsst_kernel_py${PYVER}.json \
       /usr/local/share/jupyter/kernels/lsst_stack/kernel.json
COPY motd /etc/motd
COPY jupyter_notebook_config.json /usr/etc/jupyter
COPY 20_jupytervars /etc/sudoers.d/
COPY pythonrc /etc/skel/.pythonrc
COPY lsst_kernel_py${PYVER}.json selfculler.py \
      lsstlaunch.bash lablauncher.bash runlab.sh refreshnb.sh \
      prepuller.sh \
      ${jl}/
# "lsst" is a real GitHub organization.
RUN  sed -i -e \
      's|^lsst:x:1000:1000::/home/lsst|lsst_lcl:x:1000:1000::/home/lsst_lcl|' \
      /etc/passwd && \
     sed -i -e 's/^lsst:x:1000/lsst_lcl:x:1000/' /etc/group && \
     pwconv && \
     grpconv && \
     if [ -d /home/lsst ]; then \
         mv /home/lsst /home/lsst_lcl ; \
     fi
ENV  LANG=C.UTF-8
WORKDIR /tmp
CMD [ "/opt/lsst/software/jupyterlab/lablauncher.bash" ]
LABEL description="JupyterLab demo: LSST Stack (Python {{PYVER}})" \
       name="{{IMAGE_NAME}}" \
       version="{{VERSION}}"
